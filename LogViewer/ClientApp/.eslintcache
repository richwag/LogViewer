[{"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\registerServiceWorker.js":"1","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\index.tsx":"2","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\reportWebVitals.js":"3","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\App.tsx":"4","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\LogDisplay.tsx":"5","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\AppChooser.tsx":"6","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\MessageTypeChooser.tsx":"7","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\LogViewer.tsx":"8","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\Home.tsx":"9","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\Navigation.tsx":"10","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\FieldError.tsx":"11","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetApplications.tsx":"12","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetMessageTypes.tsx":"13","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetLogs.tsx":"14","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\index.tsx":"15","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\reportWebVitals.js":"16","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\App.tsx":"17","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\LogViewer.tsx":"18","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\MessageTypeChooser.tsx":"19","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\LogDisplay.tsx":"20","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetLogs.tsx":"21","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\FieldError.tsx":"22","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\AppChooser.tsx":"23","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetMessageTypes.tsx":"24","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetApplications.tsx":"25","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\EnvironmentChooser.tsx":"26","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\EnvironmentProvider.tsx":"27","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\MultiSelect.tsx":"28","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\CheckBoxList.tsx":"29","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\index.tsx":"30","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\reportWebVitals.js":"31","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\App.tsx":"32","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\LogViewer.tsx":"33","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\EnvironmentProvider.tsx":"34","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\FieldError.tsx":"35","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\LogDisplay.tsx":"36","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\MessageTypeChooser.tsx":"37","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetLogs.tsx":"38","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\AppChooser.tsx":"39","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\EnvironmentChooser.tsx":"40","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\CheckBoxList.tsx":"41","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetApplications.tsx":"42","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetMessageTypes.tsx":"43"},{"size":4121,"mtime":1621521412879,"results":"44","hashOfConfig":"45"},{"size":645,"mtime":1638992583469,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1632948937998,"results":"47","hashOfConfig":"45"},{"size":493,"mtime":1632948937979,"results":"48","hashOfConfig":"45"},{"size":3851,"mtime":1642538073705,"results":"49","hashOfConfig":"45"},{"size":1573,"mtime":1642536083771,"results":"50","hashOfConfig":"45"},{"size":1382,"mtime":1642538066814,"results":"51","hashOfConfig":"45"},{"size":4816,"mtime":1642623134325,"results":"52","hashOfConfig":"45"},{"size":65,"mtime":1632948937981,"results":"53","hashOfConfig":"45"},{"size":506,"mtime":1642521379552,"results":"54","hashOfConfig":"45"},{"size":224,"mtime":1638998750293,"results":"55","hashOfConfig":"45"},{"size":1745,"mtime":1642620402846,"results":"56","hashOfConfig":"45"},{"size":1238,"mtime":1642538020844,"results":"57","hashOfConfig":"45"},{"size":2278,"mtime":1639428101382,"results":"58","hashOfConfig":"45"},{"size":645,"mtime":1645827477243,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1632948937998,"results":"61","hashOfConfig":"60"},{"size":279,"mtime":1646254638734,"results":"62","hashOfConfig":"60"},{"size":5223,"mtime":1646257532185,"results":"63","hashOfConfig":"60"},{"size":723,"mtime":1646433072130,"results":"64","hashOfConfig":"60"},{"size":3980,"mtime":1646437240138,"results":"65","hashOfConfig":"60"},{"size":2390,"mtime":1646437221991,"results":"66","hashOfConfig":"60"},{"size":224,"mtime":1638998750293,"results":"67","hashOfConfig":"60"},{"size":1684,"mtime":1646250614011,"results":"68","hashOfConfig":"60"},{"size":1313,"mtime":1646253849423,"results":"69","hashOfConfig":"60"},{"size":1849,"mtime":1646437187140,"results":"70","hashOfConfig":"60"},{"size":1906,"mtime":1646436402192,"results":"71","hashOfConfig":"60"},{"size":870,"mtime":1646436463694,"results":"72","hashOfConfig":"60"},{"size":1257,"mtime":1646417800988,"results":"73","hashOfConfig":"74"},{"size":1549,"mtime":1646437601404,"results":"75","hashOfConfig":"60"},{"size":645,"mtime":1645827477243,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1632948937998,"results":"78","hashOfConfig":"77"},{"size":279,"mtime":1646254638734,"results":"79","hashOfConfig":"77"},{"size":4203,"mtime":1646857723864,"results":"80","hashOfConfig":"77"},{"size":870,"mtime":1646436463694,"results":"81","hashOfConfig":"77"},{"size":224,"mtime":1638998750293,"results":"82","hashOfConfig":"77"},{"size":3448,"mtime":1646855326246,"results":"83","hashOfConfig":"77"},{"size":723,"mtime":1646433072130,"results":"84","hashOfConfig":"77"},{"size":2390,"mtime":1646437221991,"results":"85","hashOfConfig":"77"},{"size":1684,"mtime":1646250614011,"results":"86","hashOfConfig":"77"},{"size":1906,"mtime":1646436402192,"results":"87","hashOfConfig":"77"},{"size":1439,"mtime":1646858038820,"results":"88","hashOfConfig":"77"},{"size":1849,"mtime":1646437187140,"results":"89","hashOfConfig":"77"},{"size":1164,"mtime":1646855285507,"results":"90","hashOfConfig":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1782yys",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g6v8r7",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"8kstu5",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"12oom9s",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"155"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\index.tsx",[],["184","185"],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\reportWebVitals.js",[],["186","187"],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\App.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\LogDisplay.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\AppChooser.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\MessageTypeChooser.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\LogViewer.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\Home.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\Navigation.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\FieldError.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetApplications.tsx",["188","189"],"﻿import { useEffect, useState } from \"react\";\r\nimport { Application } from \"./Application\";\r\nimport config from \"./config.json\";\r\n\r\nconst pleaseChoose: Application = { ApplicationId: \"-1\", ApplicationName: \"Please Choose\" };\r\n\r\nfunction useGetApplications(): [Array<Application>, boolean, string | null] {\r\n    const [apps, setApps] = useState<Array<Application>>([]);\r\n    const [busy, setBusy] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setError(null);\r\n                setBusy(true);\r\n\r\n                const response = await fetch(\r\n                    `${config.server_prefix_url}ErrorManagement/ApplicationInfos`,\r\n                    {\r\n                        mode: \"cors\",\r\n                        headers: { \"api-version\": \"2.0\" },\r\n                        credentials: \"include\",\r\n                    }\r\n                );\r\n\r\n                setBusy(false);\r\n\r\n                if (response.ok) {\r\n                    var tmpApps: Array<Application> = await response.json();\r\n                    tmpApps.sort((a, b) => {\r\n                        return a.ApplicationName.localeCompare(b.ApplicationName);\r\n                    });\r\n                    tmpApps.splice(0, 0, pleaseChoose);\r\n                    setApps(tmpApps);\r\n                }\r\n                else {\r\n                    throw (\"error\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                setError(\"Can't retrieve applications\");\r\n                setBusy(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    return [apps, busy, error];\r\n}\r\n\r\nexport { useGetApplications };\r\n","C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetMessageTypes.tsx",[],"C:\\projects\\status-center\\Core5\\Bremer.NetCore.StatusCenter.UI\\ClientApp\\src\\UseGetLogs.tsx",["190"],"import { useEffect, useState } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport config from \"./config.json\";\r\n\r\ninterface ApplicationLog {\r\n    Message: string;\r\n    MessageTypeId: string;\r\n    DateTimeUtc: string;\r\n    FullErrorJson: string;\r\n    CurrentUserName: string;\r\n    Host: string;\r\n    DateTime: Date;\r\n}\r\n\r\ninterface LogFilter {\r\n    applicationId: string;\r\n    messageTypes: string;\r\n    messageContains: string;\r\n    hostContains: string;\r\n    errorJsonContains: string;\r\n    userContains: string;\r\n    page: number;\r\n    pageSize: number;\r\n}\r\n\r\nfunction useGetLogs(filter: LogFilter | undefined): [Array<ApplicationLog>, boolean, string | null] {\r\n    const [logs, setLogs] = useState<Array<ApplicationLog>>([]);\r\n    const [busy, setBusy] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setError(null);\r\n                setBusy(true);\r\n                const response = await fetch(`${config.server_prefix_url}ErrorManagement/ApplicationLogs?` + queryString.stringify(filter as LogFilter), {\r\n                    mode: \"cors\",\r\n                    headers: { \"api-version\": \"2.0\" },\r\n                    credentials: \"include\",\r\n                });\r\n                setBusy(false);\r\n\r\n                if (response.ok) {\r\n                    var tempLogs = await response.json();\r\n                    tempLogs.forEach((e: ApplicationLog) => {\r\n                        e.DateTime = new Date(e.DateTimeUtc);\r\n                        e.FullErrorJson = e.FullErrorJson ? JSON.parse(e.FullErrorJson.replace(\"\\r\\n\", \"\")) : e.FullErrorJson;\r\n                    });\r\n                    setLogs(tempLogs);\r\n                }\r\n                else {\r\n                    throw (\"error\");\r\n                }\r\n\r\n            } catch (e) {\r\n                setBusy(false);\r\n                setError(\"error\");\r\n                setLogs(new Array<ApplicationLog>());\r\n            }\r\n        };\r\n\r\n        if (filter) {\r\n            fetchData();\r\n        } else {\r\n            setLogs([]);\r\n        }\r\n    }, [filter]);\r\n\r\n    return [logs, busy, error];\r\n}\r\n\r\nexport { useGetLogs };\r\n\r\nexport type { LogFilter, ApplicationLog };\r\n","C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\index.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\reportWebVitals.js",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\App.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\LogViewer.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\MessageTypeChooser.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\LogDisplay.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetLogs.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\FieldError.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\AppChooser.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetMessageTypes.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\UseGetApplications.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\EnvironmentChooser.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\EnvironmentProvider.tsx",[],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\MultiSelect.tsx",["191"],"C:\\projects\\LogViewer\\LogViewer\\ClientApp\\src\\CheckBoxList.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\index.tsx",[],["192","193"],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\reportWebVitals.js",[],["194","195"],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\App.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\LogViewer.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\EnvironmentProvider.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\FieldError.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\LogDisplay.tsx",["196"],"import BootstrapTable, { ColumnDescription } from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport date from \"date-and-time\";\r\nimport { useGetMessageTypes } from \"./UseGetMessageTypes\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { ApplicationLog } from \"./UseGetLogs\";\r\nimport { useEnvironment } from \"./EnvironmentProvider\";\r\n\r\nfunction LogDisplay({ logs, setHostContains, setUserContains }: { logs: Array<ApplicationLog>; setHostContains: { (host: string): void }; setUserContains: { (user: string): void } }) {\r\n  const environment = useEnvironment();\r\n  const [messageTypes] = useGetMessageTypes(environment);\r\n\r\n  function dateFormatter(d: Date) {\r\n    return date.format(d, \"MM/DD/YYYY HH:mm:ss\");\r\n  }\r\n\r\n  function messageTypeFormatter(d: number) {\r\n    try {\r\n      var result = messageTypes.find(({ MessageTypeId }) => MessageTypeId == d);\r\n\r\n      if (result === undefined) {\r\n        return \"unknown\";\r\n      }\r\n\r\n      return result.Name;\r\n    } catch (e) {\r\n      return \"unknown\";\r\n    }\r\n  }\r\n\r\n  const expandRow = {\r\n    renderer: (row: ApplicationLog) => (\r\n      <div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <label className=\"font-weight-bold mr-1 mb-0\">User: </label>\r\n          <span className=\"btn btn-link\" onClick={() => setUserContains(row.CurrentUserName)}>\r\n            {row.CurrentUserName}\r\n          </span>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <label className=\"font-weight-bold mr-1  mb-0\">Host: </label>\r\n          <span className=\"btn btn-link\" onClick={() => setHostContains(row.Host)}>\r\n            {row.Host}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <label className=\"font-weight-bold\">Error Json:</label>\r\n          <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n            {row.FullErrorJson ? JSON.stringify(row.FullErrorJson, null, 4) : \"\"}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      </div>\r\n    ),\r\n    expandByColumnOnly: true,\r\n    showExpandColumn: true,\r\n    expandHeaderColumnRenderer: ({ isAnyExpands }: { isAnyExpands: boolean }) => {\r\n      if (isAnyExpands) {\r\n        return <i className=\"bi bi-caret-down\"></i>;\r\n      }\r\n      return <i className=\"bi bi-caret-right\"></i>;\r\n    },\r\n    expandColumnRenderer: ({ expanded }: { expanded: boolean }) => {\r\n      if (expanded) {\r\n        return <i className=\"bi bi-caret-down\"></i>;\r\n      }\r\n      return <i className=\"bi bi-caret-right\"></i>;\r\n    },\r\n  };\r\n\r\n  const columns: Array<ColumnDescription> = [\r\n    {\r\n      dataField: \"Message\",\r\n      text: \"Message\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"MessageTypeId\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      formatter: messageTypeFormatter,\r\n    },\r\n    {\r\n      dataField: \"DateTime\",\r\n      text: \"Time\",\r\n      formatter: dateFormatter,\r\n      sort: true,\r\n      sortFunc: (a: any, b: any, order: string) => {\r\n        if (order === \"asc\") {\r\n          return b - a;\r\n        }\r\n        return a - b; // desc\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <hr />\r\n      <label>Results</label>\r\n      <BootstrapTable bootstrap4 keyField=\"LogId\" data={logs} columns={columns} pagination={paginationFactory({})} expandRow={expandRow} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { LogDisplay };\r\n","C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\MessageTypeChooser.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetLogs.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\AppChooser.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\EnvironmentChooser.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\CheckBoxList.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetApplications.tsx",[],"C:\\projects\\LogViewer - Copy\\LogViewer\\ClientApp\\src\\UseGetMessageTypes.tsx",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","messageId":"204","fix":"205"},{"ruleId":"206","severity":1,"message":"207","line":38,"column":21,"nodeType":"208","messageId":"209","endLine":38,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":52,"column":21,"nodeType":"208","messageId":"209","endLine":52,"endColumn":37},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","messageId":"204","fix":"210"},{"ruleId":"197","replacedBy":"211"},{"ruleId":"199","replacedBy":"212"},{"ruleId":"197","replacedBy":"211"},{"ruleId":"199","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":20,"column":75,"nodeType":"215","messageId":"204","endLine":20,"endColumn":77},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"218","text":"219"},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",{"range":"220","text":"219"},["216"],["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0]]