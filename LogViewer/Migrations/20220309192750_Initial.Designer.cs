// <auto-generated />
using System;
using LogViewer.LogViewer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogViewer.Migrations
{
    [DbContext(typeof(ErrorContext))]
    [Migration("20220309192750_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("LogViewer.LogViewer.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("ApplicationId");

                    b.ToTable("Application", (string)null);

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            ApplicationName = "Application 1"
                        },
                        new
                        {
                            ApplicationId = 2,
                            ApplicationName = "Application 2"
                        });
                });

            modelBuilder.Entity("LogViewer.LogViewer.Models.LogEntry", b =>
                {
                    b.Property<Guid>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentUserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<long>("DateTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DateTime");

                    b.Property<string>("FullErrorJson")
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("MessageTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LogId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MessageTypeId");

                    b.ToTable("LogEntry", (string)null);

                    b.HasData(
                        new
                        {
                            LogId = new Guid("cc7b75b9-4b29-425c-9252-c376d7786054"),
                            ApplicationId = 1,
                            CurrentUserName = "Foo",
                            DateTime = 637824508703744227L,
                            FullErrorJson = "{\"Name\": \"name\", \"Value\": \"value\"}",
                            Host = "Host",
                            Message = "Exception",
                            MessageTypeId = (short)1
                        },
                        new
                        {
                            LogId = new Guid("db8b6364-00f0-4d6d-b975-79eca5acb564"),
                            ApplicationId = 2,
                            CurrentUserName = "Foo",
                            DateTime = 637824508703744232L,
                            Host = "Host",
                            Message = "Good Morning",
                            MessageTypeId = (short)2
                        },
                        new
                        {
                            LogId = new Guid("f595a444-c4f4-49ea-87d2-884b23757091"),
                            ApplicationId = 1,
                            CurrentUserName = "Foo",
                            DateTime = 637824508703744234L,
                            Host = "Host",
                            Message = "Warning",
                            MessageTypeId = (short)3
                        },
                        new
                        {
                            LogId = new Guid("80ffd27a-23ee-4295-bc8e-14e33d8400ee"),
                            ApplicationId = 2,
                            CurrentUserName = "Foo",
                            DateTime = 637824508703744235L,
                            Host = "Host",
                            Message = "Some debug information",
                            MessageTypeId = (short)4
                        });
                });

            modelBuilder.Entity("LogViewer.LogViewer.Models.MessageType", b =>
                {
                    b.Property<short>("MessageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("MessageTypeId");

                    b.ToTable("MessageType", (string)null);

                    b.HasData(
                        new
                        {
                            MessageTypeId = (short)1,
                            Name = "Error"
                        },
                        new
                        {
                            MessageTypeId = (short)2,
                            Name = "Information"
                        },
                        new
                        {
                            MessageTypeId = (short)3,
                            Name = "Warning"
                        },
                        new
                        {
                            MessageTypeId = (short)4,
                            Name = "Debug"
                        });
                });

            modelBuilder.Entity("LogViewer.LogViewer.Models.LogEntry", b =>
                {
                    b.HasOne("LogViewer.LogViewer.Models.Application", "Application")
                        .WithMany("ApplicationLogs")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK_LogEntry_Application");

                    b.HasOne("LogViewer.LogViewer.Models.MessageType", "MessageType")
                        .WithMany("ApplicationLogs")
                        .HasForeignKey("MessageTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_LogEntry_MessageType");

                    b.Navigation("Application");

                    b.Navigation("MessageType");
                });

            modelBuilder.Entity("LogViewer.LogViewer.Models.Application", b =>
                {
                    b.Navigation("ApplicationLogs");
                });

            modelBuilder.Entity("LogViewer.LogViewer.Models.MessageType", b =>
                {
                    b.Navigation("ApplicationLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
